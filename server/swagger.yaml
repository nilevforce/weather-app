openapi: 3.0.0

info:
  title: Weather API
  version: 1.0.0
  description: API service for retrieving weather data and user management

servers:
  - url: /api/v1
    description: Default API path
  - url: /api/docs
    description: Swagger UI documentation

paths:
  /ping:
    get:
      tags:
        - Health
      summary: API health check
      description: Endpoint to check if the API is running
      responses:
        "200":
          description: API is running
          content:
            text/plain:
              schema:
                type: string
                example: "PONG"

  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        "201":
          description: User successfully created
        "400":
          description: Invalid request data

  /auth/signin:
    post:
      tags:
        - Authentication
      summary: Log in to user account
      description: Sign in with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninRequest"
      responses:
        "200":
          description: User successfully authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SigninResponse"
        "400":
          description: Invalid request data
        "401":
          description: Invalid credentials

  /auth/signout:
    post:
      tags:
        - Authentication
      summary: Log out from user account
      description: Sign out and invalidate current session
      responses:
        "204":
          description: Successfully logged out

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get a new access token using refresh token
      responses:
        "200":
          description: New tokens successfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SigninResponse"
        "401":
          description: Invalid or expired refresh token

  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: List all registered users (requires authentication)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Retrieve a specific user by their ID (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: cuid
          description: User's unique identifier
          example: cjld2cjxh0000qzrmn831i7rn
      responses:
        "200":
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "404":
          description: User not found

  /weather:
    get:
      tags:
        - Weather
      summary: Get current weather
      description: Retrieve current weather for specified location (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: city
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 100
          description: Name of the city or location
          example: London
        - in: query
          name: lang
          schema:
            type: string
            enum: [en, ru]
            default: en
          description: Language for weather description
      responses:
        "200":
          description: Weather data retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentWeatherDto"
        "400":
          description: Invalid parameters
        "401":
          description: Unauthorized
        "404":
          description: Location not found

  /weather/forecast:
    get:
      tags:
        - Weather
      summary: Get weather forecast
      description: Retrieve weather forecast for specified location (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: city
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 100
          description: Name of the city or location
          example: London
        - in: query
          name: lang
          schema:
            type: string
            enum: [en, ru]
            default: en
          description: Language for weather description
      responses:
        "200":
          description: Weather forecast data retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForecastWeatherDto"
        "400":
          description: Invalid parameters
        "401":
          description: Unauthorized
        "404":
          description: Location not found

tags:
  - name: Health
    description: API health checking endpoints
  - name: Authentication
    description: Authentication and user session management
  - name: Users
    description: User management operations
  - name: Weather
    description: Weather data retrieval endpoints

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SignupRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com
        password:
          type: string
          format: password
          description: User's password (minimum 6 characters)
          example: password123

    SigninRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com
        password:
          type: string
          format: password
          description: User's password
          example: password123

    SigninResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          description: JWT refresh token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          $ref: "#/components/schemas/User"

    User:
      type: object
      properties:
        id:
          type: string
          format: cuid
          description: User's unique identifier
          example: cjld2cjxh0000qzrmn831i7rn
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com
        role:
          type: string
          format: email
          description: User's role
          example: USER

    LocationWeatherDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the location
          example: London
        lat:
          type: number
          format: float
          description: Latitude of the location
          example: 51.5074
        lon:
          type: number
          format: float
          description: Longitude of the location
          example: -0.1278
        localtime:
          type: string
          format: date-time
          description: Local time in ISO 8601 format
          example: "2025-07-28T18:45:00+03:00"
        timestamp:
          type: integer
          format: int64
          description: Local time as Unix timestamp (seconds since epoch)
          example: 1753701900

    CurrentWeatherDto:
      type: object
      properties:
        location:
          $ref: "#/components/schemas/LocationWeatherDto"
        current:
          type: object
          properties:
            temperature:
              type: number
              format: float
              description: Current air temperature in degrees Celsius
              example: 22.5
            feelsLike:
              type: number
              format: float
              description: Perceived temperature in degrees Celsius
              example: 21.0
            humidity:
              type: number
              format: float
              description: Relative humidity as a percentage (0â€“100)
              example: 60
            pressure:
              type: number
              format: float
              description: Atmospheric pressure in millibars (mb)
              example: 1012
            windSpeed:
              type: number
              format: float
              description: Wind speed in meters per second (m/s)
              example: 5.2
            windGust:
              type: number
              format: float
              description: Wind gust speed in meters per second (m/s)
              example: 8.1
            windDeg:
              type: number
              format: float
              description: Wind direction in degrees (0â€“360)
              example: 270
            windDirection:
              type: string
              description: Compass direction of the wind
              example: W
            cloudCoverage:
              type: number
              format: float
              description: Cloud cover as a percentage (0â€“100)
              example: 75
            precipitation:
              type: number
              format: float
              description: Precipitation amount in millimeters (mm)
              example: 0.5
            uvIndex:
              type: number
              format: float
              description: UV index (usually ranges from 0 to 11+)
              example: 3
            visibility:
              type: number
              format: float
              description: Visibility in meters
              example: 10000
            conditionDescription:
              type: string
              description: Short description of current weather conditions
              example: Partly cloudy
            isDay:
              type: boolean
              description: Indicates whether it is currently daytime (true) or nighttime (false)
              example: true

    ForecastWeatherDto:
      type: object
      properties:
        location:
          $ref: "#/components/schemas/LocationWeatherDto"
        forecast:
          type: array
          items:
            $ref: "#/components/schemas/DailyForecastWeatherDto"

    DailyForecastWeatherDto:
      type: object
      properties:
        date:
          type: string
          format: date
          description: Forecast date in ISO 8601 format
          example: "2025-08-10"
        maxTemp:
          type: number
          format: float
          description: Maximum temperature in degrees Celsius
          example: 25.5
        minTemp:
          type: number
          format: float
          description: Minimum temperature in degrees Celsius
          example: 15.2
        avgTemp:
          type: number
          format: float
          description: Average temperature in degrees Celsius
          example: 20.3
        maxWindSpeed:
          type: number
          format: float
          description: Maximum wind speed in meters per second (m/s)
          example: 8.5
        totalPrecipitation:
          type: number
          format: float
          description: Total precipitation amount in millimeters (mm)
          example: 2.5
        avgHumidity:
          type: number
          format: float
          description: Average humidity as a percentage (0â€“100)
          example: 65
        chanceOfRain:
          type: number
          format: float
          description: Chance of rain as a percentage (0â€“100)
          example: 30
        conditionDescription:
          type: string
          description: Weather condition description
          example: Partly cloudy
        uvIndex:
          type: number
          format: float
          description: UV index (usually ranges from 0 to 11+)
          example: 4
        hourly:
          type: array
          items:
            $ref: "#/components/schemas/HourlyForecastWeatherDto"
          description: Hourly forecast data (optional)

    HourlyForecastWeatherDto:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          description: Local time as Unix timestamp (seconds since epoch)
          example: 1753701900
        localtime:
          type: string
          format: date-time
          description: Local time in ISO 8601 format
          example: "2025-08-10T14:00:00+03:00"
        temperature:
          type: number
          format: float
          description: Temperature in degrees Celsius
          example: 22.5
        windSpeed:
          type: number
          format: float
          description: Wind speed in meters per second (m/s)
          example: 5.2
        windDirection:
          type: string
          description: Compass direction of the wind
          example: NW
        precipitation:
          type: number
          format: float
          description: Precipitation amount in millimeters (mm)
          example: 0.1
        chanceOfRain:
          type: number
          format: float
          description: Chance of rain as a percentage (0â€“100)
          example: 20
        conditionDescription:
          type: string
          description: Weather condition description
          example: Light clouds

    ErrorResponse:
      type: object
      description: Standard error response format used across all error responses in the API
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              description: Human-readable error message
              example: Invalid input data
            code:
              type: string
              description: Error code
              example: VALIDATION_ERROR
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: Field that caused the error
                    example: city
                  message:
                    type: string
                    description: Error message for the field
                    example: This field is required
